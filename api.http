## API Req 1: Retrieve all the films.
   GET http://localhost:3000/api/films HTTP/1.1

## API Req 2: retrive a film given the ID
  #  GET http://localhost:3000/api/films/2 HTTP/1.1

## API Req 3: Create new film (without id) -- dee terminare con 3 cancelletti altimenti si rompe
# POST http://localhost:3000/api/films HTTP/1.1
# Content-Type: application/json

# {
#   "title": "big mamma k 3",
#   "favorite": 1,
#   "watchDate": "2025-05-09",
#   "rating": 5
# }
###

### API Req 4: Update film favorite property.
# PUT http://localhost:3000/api/films/2 HTTP/1.1
# content-type: application/json

# {
#     "id" : 2,
#     "favorite": 0
# }
###

### API Req 5: Change the reating  - ROTTO -
PUT http://localhost:3000/api/films/rating/delta HTTP/1.1
content-type: application/json

{
    "id" : 11,
    "operazione": "+",
    "delta": 5
}
###


### API Req 6: Deleate a film given the id  -ROTTO SE METTI ID CHE NON ESISTE -
  DELETE  http://localhost:3000/api/films/20 HTTP/1.1
  Content-Type: application/json

# ## API Req 7: retive films in based a different filter
# # # get non possono avere il body
# GET http://localhost:3000/api/films/filter/lastmonth HTTP/1.1
# content-type: application/json

###

## API Req 8: update an existing film (with id)   -> invoca API 4
PUT http://localhost:3000/api/films/1 HTTP/1.1
Content-Type: application/json

{
  "title": "Pul Fiction",
  "favorite": 1,
  "watchDate": "2025-05-10",
  "rating": 4
}
###